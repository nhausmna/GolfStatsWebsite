geom_ribbon(aes(ymin=upper, ymax=lower), linetype=2, alpha=0.3, color="black") +
ylim(65, 76)
round_scores <- golf %>%
filter(fourth > 0) %>%
summarize(mean(first), mean(second), mean(third), mean(fourth))
round_stdev <- golf %>%
filter(fourth > 0) %>%
summarize(sd(first), sd(second), sd(third), sd(fourth))
upper <- as.numeric(as.vector(round_scores[1,])) + as.numeric(as.vector(round_stdev[1,]))
lower <- as.numeric(as.vector(round_scores[1,])) - as.numeric(as.vector(round_stdev[1,]))
to_plot = data.frame(Round=c("1st", "2nd", "3rd", "4th"), "Average Score" = as.numeric(as.vector(round_scores[1,])))
ggplot(data=to_plot, aes(x=Round, y=Average.Score, group=1)) +
geom_line()+
geom_point()+
ylim(68, 72)
round_scores <- golf %>%
filter(fourth > 0) %>%
summarize(mean(first), mean(second), mean(third), mean(fourth))
round_stdev <- golf %>%
filter(fourth > 0) %>%
summarize(sd(first), sd(second), sd(third), sd(fourth))
upper <- as.numeric(as.vector(round_scores[1,])) + as.numeric(as.vector(round_stdev[1,]))
lower <- as.numeric(as.vector(round_scores[1,])) - as.numeric(as.vector(round_stdev[1,]))
to_plot = data.frame(Round=c("1st", "2nd", "3rd", "4th"), "Average Score" = as.numeric(as.vector(round_scores[1,])))
ggplot(data=to_plot, aes(x=Round, y=Average.Score, group=1)) +
geom_line()+
geom_point()+
ylim(69, 72)
golf
View(golf)
ggplot(golf, aes(x=tname, y=money, fill=tname)) +
geom_boxplot()
ggplot(golf, aes(x=tname, y=money, fill=tname)) +
geom_boxplot() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(golf, aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(golf, aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(golf$money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
golf %>%
drop_na(money) %>%
ggplot(aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(golf$money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(golf$money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
ggplot(aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(not_na_money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
ggplot(golf, aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(not_na_money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
ggplot(golf %>% drop_na(money) , aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(not_na_money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
ggplot(golf %>% drop_na(money, tname), aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(not_na_money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
golf_modified_forMoney <- golf %>%
drop_na(money) %>%
filter(money < quantile(not_na_money, 0.1)) %>%
filter(money > quantile(not_na_money, 0.9))
ggplot(golf_modified_forMoney, aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(not_na_money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
golf_modified_forMoney <- golf %>%
drop_na(money) %>%
filter(money < quantile(not_na_money, 0.1)) %>%
filter(money > quantile(not_na_money, 0.9))
ggplot(golf_modified_forMoney, aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(not_na_money, c(0.1, 0.9))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
golf_modified_forMoney <- golf %>%
drop_na(money) %>%
filter(money < quantile(not_na_money, 0.1)) %>%
filter(money > quantile(not_na_money, 0.9))
ggplot(golf_modified_forMoney, aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
quantile(not_na_money, 0.1)
quantile(not_na_money, 0.9)
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
golf_modified_forMoney <- golf %>%
drop_na(money) %>%
filter(money > quantile(not_na_money, 0.1)) %>%
filter(money < quantile(not_na_money, 0.9))
ggplot(golf_modified_forMoney, aes(x=tname, y=money, fill=tname)) +
geom_boxplot(outlier.shape = NA) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
names <- unique(golf$name)
names
names <- unique(golf$name)
get_nameProperties <- function(name){
toRet <- vector()
if(name == "^(\w)\w*\s+\1\w*$"){
names <- unique(golf$name)
get_nameProperties <- function(name){
toRet <- vector()
if(name == "^(\w)\w*\s+\1\w*$"){
names <- unique(golf$name)
get_nameProperties <- function(names){
toRet <- vector()
vector <- append(toRet, str_detect(names, "^(\w)\w*\s+\1\w*$"))
names <- unique(golf$name)
get_nameProperties <- function(names){
toRet <- vector()
vector <- append(toRet, str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$"))
}
str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
names <- unique(golf$name)
get_nameProperties <- function(names){
toRet <- vector()
toRet <- append(toRet, str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$"))
toRet <- append(toRet, str_detect(names, "^[ A-Za-z]+$"))
toRet <- append(toRet, str_detect(names, "[ \\t]{3,}"))
}
names <- unique(golf$name)
get_nameProperties <- function(names){
toRet <- vector()
toRet <- append(toRet, str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$"))
toRet <- append(toRet, str_detect(names, "^[ A-Za-z]+$"))
toRet <- append(toRet, str_detect(names, "[ \\t]{3,}"))
return(toRet)
}
out <- get_nameProperties(names)
out
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "[ \\t]{3,}")
return(data.frame("Has Alliteration"=alliteration, "Only Letters"=justletter, "More than 2 words"=threeWords))
}
get_nameProperties(names)
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "[ \\t]{3,}")
return(data.frame("Names"=names, Has Alliteration"=alliteration, "Only Letters"=justletter, "More than 2 words"=threeWords))
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "[ \\t]{3,}")
return(data.frame("Names"=names, "Has Alliteration"=alliteration, "Only Letters"=justletter, "More than 2 words"=threeWords))
}
get_nameProperties(names)
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "[ \\t]{2,}")
return(data.frame("Names"=names, "Has Alliteration"=alliteration, "Only Letters"=justletter, "More than 2 words"=threeWords))
}
get_nameProperties(names)
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
return(data.frame("Names"=names, "Has Alliteration"=alliteration, "Only Letters"=justletter, "More than 2 words"=threeWords))
}
get_nameProperties(names)
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
shortFirst <- str_detect(names, "\\w{1,2}\\s")
return(data.frame("Names"=names,
"Has Alliteration"=alliteration,
"Only Letters"=justletter,
"More than 2 words"=threeWords))
}
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "^\\w{10,}$ ")
return(data.frame("Names"=names,
"Has Alliteration"=alliteration,
"Only Letters"=justletter,
"More than 2 words"=threeWords,
"Longer than 10 characters in one word"=longWord))
}
get_nameProperties(names)
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "\\w{10,}")
return(data.frame("Names"=names,
"Has Alliteration"=alliteration,
"Only Letters"=justletter,
"More than 2 words"=threeWords,
"Longer than 10 characters in one word"=longWord))
}
get_nameProperties(names)
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "\\w{11,}")
return(data.frame("Names"=names,
"Has Alliteration"=alliteration,
"Only Letters"=justletter,
"More than 2 words"=threeWords,
"Longer than 10 characters in one word"=longWord))
}
get_nameProperties(names)
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
golf_modified_forMoney <- golf %>%
drop_na(money) %>%
filter(money > quantile(not_na_money, 0.1)) %>%
filter(money < quantile(not_na_money, 0.9))
ggplot(golf_modified_forMoney, aes(x=tname, y=money, fill=tname)) +
geom_violin(outlier.shape = NA) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
not_na_money <- golf %>%
drop_na(money) %>%
pull(money)
golf_modified_forMoney <- golf %>%
drop_na(money) %>%
filter(money > quantile(not_na_money, 0.1)) %>%
filter(money < quantile(not_na_money, 0.9))
ggplot(golf_modified_forMoney, aes(x=tname, y=money, fill=tname)) +
geom_violin() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "\\w{11,}")
titles <- c("Has Alliteration", "Not Only Letters", "More than 2 words", "Longer than 10 characters in one word")
counts <- c(count(alliteration), count(!justletter), count(threeWords), count(longWord))
return(data.frame("Count"=counts, "Characteristic"=titles))
}
chart_data <- get_nameProperties(names)
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "\\w{11,}")
titles <- c("Has Alliteration", "Not Only Letters", "More than 2 words", "Longer than 10 characters in one word")
counts <- c(sum(alliteration), sum(!justletter), sum(threeWords), sum(longWord))
return(data.frame("Count"=counts, "Characteristic"=titles))
}
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Count)) +
geom_bar(stat="identity")
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Count, color=Characteristic)) +
geom_bar(stat="identity")
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Count, fill=Characteristic)) +
geom_bar(stat="identity")
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Count, fill=Characteristic)) +
geom_bar(stat="identity")+
theme(legend. title = element_blank())
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Count, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.title = element_blank())
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Count, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "\\w{11,}")
titles <- c("Has Alliteration", "Not Only Letters", "More than 2 words", "Long Word in Name")
counts <- c(sum(alliteration), sum(!justletter), sum(threeWords), sum(longWord))
return(data.frame("Count"=counts, "Characteristic"=titles))
}
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Count, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "\\w{11,}")
titles <- c("Has Alliteration", "Not Only Letters", "More than 2 words", "Long Word in Name")
counts <- c(sum(alliteration)/length(alliteration), sum(!justletter)/length(alliteration), sum(threeWords)/length(alliteration), sum(longWord)/length(alliteration))
return(data.frame("Proportion"=counts, "Characteristic"=titles))
}
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Proportion, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Proportion, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")+
geom_text(aes(y = fraction + 0.001, label = Counts,
x = Characteristic))
names <- unique(golf$name)
get_nameProperties <- function(names){
alliteration <- str_detect(names, "^(\\w)\\w*\\s+\\1\\w*$")
justletter <- str_detect(names, "^[ A-Za-z]+$")
threeWords <- str_detect(names, "\\w+\\s+\\w+\\s+")
longWord <- str_detect(names, "\\w{11,}")
titles <- c("Has Alliteration", "Not Only Letters", "More than 2 words", "Long Word in Name")
counts <- c(sum(alliteration), sum(!justletter), sum(threeWords), sum(longWord))
props <- counts / length(alliteration)
return(data.frame("Proportion"=props, "Counts"=counts, "Characteristic"=titles))
}
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Proportion, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")+
geom_text(aes(y = fraction + 0.001, label = Counts,
x = Characteristic))
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Proportion, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")+
geom_text(aes(y = Proportion + 0.001, label = Counts,
x = Characteristic))
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Proportion, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")+
geom_text(aes(y = Proportion + 0.01, label = Counts,
x = Characteristic))
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Proportion, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")+
geom_text(aes(y = Proportion + 0.003, label = Counts,
x = Characteristic))
chart_data <- get_nameProperties(names)
ggplot(data=chart_data, aes(x=Characteristic, y=Proportion, fill=Characteristic)) +
geom_bar(stat="identity") +
theme(legend.position = "none")+
geom_text(aes(y = Proportion + 0.003, label = Counts,
x = Characteristic))
knitr::opts_chunk$set(collapse = TRUE, echo = FALSE)
library(tidyverse)
golf <- read.csv("golfstats_dataexport_sample.csv")
knitr::opts_chunk$set(collapse = TRUE, echo = FALSE)
library(tidyverse)
library(infer)
library(tidyr)
library(modelr)
golf <- read.csv("golfstats_dataexport_sample.csv")
mean(golf$birdies)
boots <- data.frame(Birdies = golf$birdies) %>%
modelr::bootstrap(1000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
interval <- boot_Median %>% quantile(c(0.025, 0.975))
my_samples <- data.frame(x = boot_Median)
ggplot(my_samples, aes(x)) +
geom_histogram(bins = 40, aes(y = ..density..), fill = "grey", col = "white") +
geom_vline(xintercept = interval[1]) +
geom_vline(xintercept = interval[2])
theme_classic()
boots <- data.frame(Birdies = golf$birdies) %>%
modelr::bootstrap(1000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
interval <- boot_Median %>% quantile(c(0.025, 0.975))
my_samples <- data.frame(x = boot_Median)
ggplot(my_samples, aes(x)) +
geom_histogram(bins = 40, aes(y = ..density..), fill = "grey", col = "white") +
geom_vline(xintercept = interval[1]) +
geom_vline(xintercept = interval[2]) +
theme_classic()
boots <- data.frame(Birdies = golf$birdies) %>%
modelr::bootstrap(10000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
interval <- boot_Median %>% quantile(c(0.025, 0.975))
my_samples <- data.frame(x = boot_Median)
ggplot(my_samples, aes(x)) +
geom_histogram(bins = 40, aes(y = ..density..), fill = "grey", col = "white") +
geom_vline(xintercept = interval[1]) +
geom_vline(xintercept = interval[2]) +
theme_classic()
boots <- data.frame(Birdies = golf$birdies) %>%
modelr::bootstrap(1000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
interval <- boot_Median %>% quantile(c(0.025, 0.975))
my_samples <- data.frame(x = boot_Median)
ggplot(my_samples, aes(x)) +
geom_histogram(bins = 40, aes(y = ..density..), fill = "grey", col = "white") +
theme_classic()
boot_Median
count(boot_Median)
boot_Median
table(boot_Median)
interval
boots <- data.frame(Birdies = golf$birdies) %>%
modelr::bootstrap(1000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
interval <- boot_Median %>% quantile(c(0.025, 0.975))
table(boot_Median)
interval
modified_birdies <- golf %>%
filter(fourth > 0) %>%
select(birdies)
boots <- data.frame(Birdies = modified_birdies) %>%
modelr::bootstrap(1000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
modified_birdies <- golf %>%
filter(fourth > 0) %>%
pull(birdies)
boots <- data.frame(Birdies = modified_birdies) %>%
modelr::bootstrap(1000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
interval <- boot_Median %>% quantile(c(0.025, 0.975))
table(boot_Median)
interval
modified_birdies <- golf %>%
filter(fourth > 0) %>%
pull(birdies)
mean(modified_birdies)
boots <- data.frame(Birdies = modified_birdies) %>%
modelr::bootstrap(1000)
boot_Median <- map_dbl(boots$strap, ~median(data.frame(.x)$Birdies))
interval <- boot_Median %>% quantile(c(0.025, 0.975))
table(boot_Median)
birdies_eagles <- golf %>%
lm(eagles ~ birdies, data = .)
plot(eagles ~ birdies, data = golf)
abline(birdies_eagles)
golf %>%
mutate(
eagles = factor(eagles),
birdies = factor(birdies)
) %>%
chisq_test(
response = eagles,
explanatory = birdies
)
